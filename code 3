#import os
#os.chdir("C:\\Users\\goran\\Documents\\Sacha travail CPES\\Python Scripts\\")
import pygame, time, sys
pygame.init()

ecran=pygame.display.set_mode((768,576))
dirt = pygame.image.load("C:\\Users\\goran\\Documents\\Sacha travail CPES\\Python Scripts\\projet info\\Dirt.png").convert_alpha()
box = pygame.image.load("C:\\Users\\goran\\Documents\\Sacha travail CPES\\Python Scripts\\projet info\\Box.png").convert_alpha()
bloc = pygame.image.load("C:\\Users\\goran\\Documents\\Sacha travail CPES\\Python Scripts\\projet info\\Bloc.png").convert_alpha()
pinguin = pygame.image.load("C:\\Users\\goran\\Documents\\Sacha travail CPES\\Python Scripts\\projet info\\Pingouin.png").convert_alpha()

carte = [[3,3,3,3,3,3,3,3,3,3,3,3],
[3,2,2,2,2,2,2,1,1,1,1,3],
[3,1,1,2,1,1,2,1,1,1,1,3],
[3,1,1,2,1,1,2,1,1,1,1,3],
[3,1,1,2,1,1,2,1,1,1,1,3],
[3,1,1,2,1,1,2,1,1,1,1,3],
[3,1,1,2,1,1,2,1,1,1,1,3],
[3,1,1,2,1,1,2,1,1,1,1,3],
[3,3,3,3,3,3,3,3,3,3,3,3]]

solides = []
indice1=0
for ligne in carte:
    indice2 = 0
    for j in ligne:
        if j == 3:
            solides += [pygame.Rect(indice2*64, indice1*64, 64, 64)]
        indice2 += 1
    indice1 += 1

indA, indO = 300, 50
while True:
    indice1 = 0
    ecran.fill(pygame.Color("#ae7640"))
    ecran.fill(pygame.Color("#bd8958"))
    for ligne in carte:
        indice2 = 0
        for j in ligne:
            if j == 1:
                terre = dirt.get_rect()
                terre.x = indice2*64
                terre.y = indice1*64
                ecran.blit(dirt, terre)
            if j == 2:
                boite = box.get_rect()
                boite.x = indice2*64
                boite.y = indice1*64
                ecran.blit(box, boite)
            if j == 3:
                bord=bloc.get_rect()
                bord.x = indice2*64
                bord.y = indice1*64
                ecran.blit(bloc, bord)
            indice2 += 1
        indice1 += 1
    #déplacements perso
    touches = pygame.key.get_pressed()    
    if touches[pygame.K_RIGHT] == 1 :
        indA += 1
        possible=True
        for rect in solides:
            if pge.colliderect(rect) == True:
                possible=False
        if possible==False:
            indA -= 1
    if touches[pygame.K_LEFT] == 1 :
        indA -= 1
    if touches[pygame.K_UP] == 1 :
        indO -= 1
    if touches[pygame.K_DOWN] == 1 :
        indO += 1
    pge = pinguin.get_rect()
    pge.x = indA
    pge.y = indO
    ecran.blit(pinguin, pge)    
        
    pygame.display.update()
    for evenement in pygame.event.get():
        if evenement.type == pygame.QUIT:
            sys.exit(0)



class perso:
    def __init__(self, n=1, s=1, p=1, r=3, t=False, v=1):
        self.nbbombemax=n
        self.nbbombeleft=s
        self.portée=p
        self.rebours=r
        self.transpercer=t
        self.vitesse=v
        


class bombe:
    def __init__(p, r, t):
        self.portée=1
        self.rebours=3
        self.transpercer=False
#pas possible de poser 2 bombes dans la même case
#nécessaire de centrer les bombes dans la case
